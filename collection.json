{
	"info": {
		"_postman_id": "630f1c9c-258f-4dc5-a36b-72cc9b9072ac",
		"name": "CRUD API Testing",
		"description": "**Automation CRUD website application. This application have both login and CRUD dashboard.****Automation steps as below:**\n\n- Login\n    \n- GET Items\n    \n- POST items\n    \n- PUT items\n    \n- DELETE /items\n    \n\nURL : [http://localhost:3000/](http://localhost:3000/)\n\n  \nValid Username : testuser\n\nPassword : password123",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47095553",
		"_collection_link": "https://spaceflight-administrator-33547798-9058703.postman.co/workspace/jessy-tom's-Workspace~1ac88bb1-e96c-42ca-8f93-3a69b0b7990f/collection/47095553-630f1c9c-258f-4dc5-a36b-72cc9b9072ac?action=share&source=collection_link&creator=47095553"
	},
	"item": [
		{
			"name": "Register",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Register with missing field",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Existing user registration",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Valid Credentials",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Invalid password",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Invalid Username",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 401\", function () {",
							"    pm.expect(pm.response.code).to.eql(401);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the correct Content-Type header\", function () {",
							"    const contentType = pm.response.headers.get('Content-Type');",
							"    pm.expect(contentType).to.match(/^application\\/json/);",
							"});",
							"",
							"",
							"pm.test(\"Response message is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.message).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response schema matches expected structure\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.all.keys('message');",
							"    pm.expect(responseData.message).to.be.a('string');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"test\",\n\"password\":\"password123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Password",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"testuser\",\n\"password\":\"password000\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing creds",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}/logout",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Backend",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Checking items",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Add items",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Edit item",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Delete item",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Missing required fields",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "POST /items — Missing required fields",
					"host": [
						"POST "
					],
					"path": [
						"items — Missing required fields"
					]
				}
			},
			"response": []
		},
		{
			"name": "update non existing item",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:8080",
			"type": "default"
		}
	]
}